/*
 * File: GraphADT.java
 * Project: A-Team Social Media Project
 * 
 * This file provides the interface specifications for the
 * Graph abstract data type.
 * 
 * Contributors:
 * Maxwell Kleinsasser
 * Apeksha Maithal
 * Isaac Zaman
 * Matthew Karrmann
 * 
 */

package application;

import java.util.Set;

/**
 * Filename: GraphADT.java Project: p4 Authors: Debra Deppeler
 * 
 * A simple graph interface (DO NOT edit this file)
 */
public interface GraphADT {


  /**
   * Adds edge between people by adding each person to the other's list.
   * 
   * @param node1, first node
   * @param node2, second node
   */
  public void addEdge(Person node1, Person node2);

  /**
   * Removes edge between two people by removing each person from the other's list.
   * 
   * @param node1, first node
   * @param node2, second node
   */
  public void removeEdge(Person node1, Person node2);

  /**
   * Adds node to graph
   * 
   * @param node to add
   */
  public void addNode(Person node);


  /**
   * Remove node from list, along with all edges connecting to node.
   * 
   * @param node in question
   */
  public void removeNode(Person node);


  /**
   * Gets all neighbors of given person in graph
   * 
   * @param node in question
   * @return set of people adjacent to node
   */
  public Set<Person> getNeighbors(Person node);

  /**
   * Gets person with given name
   * 
   * @param name, name of person
   */
  public Person getNode(String name);

  /**
   * Gets all nodes in the graph.
   * 
   * @return Set of Persons in graph
   */
  public Set<Person> getAllNodes();

  /**
   * Getter for order of graph.
   * 
   * @return order of graph
   */
  public int order();

  /**
   * Getter for size of graph.
   * 
   * @return size of graph.
   */
  public int size();
}